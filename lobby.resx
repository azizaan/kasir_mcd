<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox13.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AJqaJaYNaG9rAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBEAAAEAIADsCAAAFgAAACgAAAAgAAAAIgAAAAEAIAAAAAAAgAgAAAAAAAAAAAAAAAAAAAAA
        AAAmH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYe
        w/8mHcL/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mHcL/Jh7D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/JSfF/yI4y/8lI8T/Jh/D/yYfw/8nHcL/Jx3C/yYfw/8mH8P/JSXF/yE4y/8lJ8b/JyLE/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYdwv8eStH/C6zy/yE4zP8mHcL/Jh/D/xxP0/8dStL/Jh7D/yYdwv8fQc//Cqzy/yNW
        1v8rO83/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/JhzC/x5J0f8Iu/b/ID/N/yYdwv8mIMT/Dpjr/xGM5/8mHsP/Jh3C/x5I
        0f8Iuvb/IUXP/yckxf8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mHcL/IEDO/wi49v8fRM//Jh3C/yUixP8Nne3/EJLp/yYf
        w/8nHML/HU/T/wm29f8hNsv/Jh3C/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYew/8iNMr/CbP0/x1O0/8nHML/JSXF/wym
        8P8Omuz/JSLE/yccwv8bWtf/Cq7y/yMtyP8mHsP/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh7D/yQoxv8MpvD/Gl7Y/ycb
        wv8jLMf/CrH0/wyn8P8lJsb/JxzC/xdq3P8Nne3/JSPF/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/xGM
        5/8VdN//JxvC/yE4zP8Hvfj/CbX1/yMxyf8nHML/E4Dj/xOA4/8mHcP/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8nHML/GWLZ/xGN6P8mHcL/HFLU/wuo8P8LqPD/HkfQ/yYgxP8Plur/G1fW/yccwv8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYew/8iNMr/D5fr/yI0yv8Ue+L/GGfb/xZx3v8Wcd7/ITrM/w+W6v8jLsj/Jh7D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYew/8ZX9j/EYrn/xOB5P8kK8f/IzDJ/xKF5f8Riuf/G1fV/yYd
        wv8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYhxP8hO8z/JCvH/yYew/8mHsP/Iy3I/yE5
        zP8mIMP/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYdwv8mHsP/Jh/D/yYf
        w/8mHsP/Jh3C/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYfw/8mH8P/Jh/D/yYf
        w/8mH8P/Jh/D/yYfw/8mH8P/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>